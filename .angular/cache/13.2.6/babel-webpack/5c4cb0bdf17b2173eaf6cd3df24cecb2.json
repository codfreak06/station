{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\M.Achech\\\\Pictures\\\\7ammbou5cham\\\\weather-station\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\M.Achech\\\\Pictures\\\\7ammbou5cham\\\\weather-station\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ChartComponent } from \"ng-apexcharts\";\nimport { ServiceService } from \"./service/service.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/service.service\";\nimport * as i2 from \"ng-apexcharts\";\nvar _c0 = [\"chart\"];\nexport var AppComponent = /*#__PURE__*/(function () {\n  var AppComponent = /*#__PURE__*/function () {\n    function AppComponent(serviceService) {\n      _classCallCheck(this, AppComponent);\n\n      this.serviceService = serviceService;\n      /*this.chartOptions = {\r\n        series: [\r\n          {\r\n            name: \"series1\",\r\n            data: [31, 40, 28, 51, 42, 109, 100]\r\n          },\r\n          {\r\n            name: \"series2\",\r\n            data: [11, 32, 45, 32, 34, 52, 41]\r\n          }\r\n        ],\r\n        chart: {\r\n          height: 350,\r\n          type: \"area\"\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\"\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          categories: [\r\n            \"2018-09-19T00:00:00.000Z\",\r\n            \"2018-09-19T01:30:00.000Z\",\r\n            \"2018-09-19T02:30:00.000Z\",\r\n            \"2018-09-19T03:30:00.000Z\",\r\n            \"2018-09-19T04:30:00.000Z\",\r\n            \"2018-09-19T05:30:00.000Z\",\r\n            \"2018-09-19T06:30:00.000Z\"\r\n          ]\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: \"dd/MM/yy HH:mm\"\r\n          }\r\n        }\r\n      };*/\n    }\n\n    _createClass(AppComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.serviceService.getLaboratory().subscribe(function (res) {\n          _this.chartOptions = {\n            series: [{\n              name: \"Temperature\",\n              data: res.map(function (val) {\n                return val.temperature;\n              })\n            }, {\n              name: \"Humidity\",\n              data: res.map(function (val) {\n                return val.humidity;\n              })\n            }],\n            chart: {\n              height: 350,\n              type: \"area\"\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: \"smooth\"\n            },\n            xaxis: {\n              type: \"datetime\",\n              categories: res.map(function (val) {\n                return val.createdAt;\n              })\n            },\n            tooltip: {\n              x: {\n                format: \"dd/MM/yy HH:mm\"\n              }\n            }\n          };\n          console.log(Number(res.map(function (val) {\n            return val.temperature;\n          })));\n        });\n      }\n    }, {\n      key: \"generateData\",\n      value: function generateData(baseval, count, yrange) {\n        var i = 0;\n        var series = [];\n\n        while (i < count) {\n          var x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\n          var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n          var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n          series.push([x, y, z]);\n          baseval += 86400000;\n          i++;\n        }\n\n        return series;\n      }\n    }]);\n\n    return AppComponent;\n  }();\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ServiceService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[\"id\", \"chart\"], [3, \"series\", \"chart\", \"xaxis\", \"stroke\", \"tooltip\", \"dataLabels\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"apx-chart\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"stroke\", ctx.chartOptions.stroke)(\"tooltip\", ctx.chartOptions.tooltip)(\"dataLabels\", ctx.chartOptions.dataLabels);\n      }\n    },\n    directives: [i2.ChartComponent],\n    styles: [\"ul[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}